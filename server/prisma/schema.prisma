generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id             Int            @id @default(autoincrement())
  ext_id         String         @unique
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  loginAt        DateTime?
  active         Boolean
  role           Role
  refresh_tokens RefreshToken[]
  white_games    Game[]         @relation(name: "white")
  black_games    Game[]         @relation(name: "black")
  user           User?
}

model Game {
  id         Int       @id @default(autoincrement())
  ext_id     String    @unique
  time_limit Int
  startedAt  DateTime  @default(now())
  finishedAt DateTime?
  winner     Int?
  id_white   Int
  id_black   Int
  white      Account   @relation(name: "white", fields: [id_white], references: [id])
  black      Account   @relation(name: "black", fields: [id_black], references: [id])
  turns      Turn[]
}

model RefreshToken {
  id         Int      @id @default(autoincrement())
  content    String   @unique @db.VarChar(1000)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  id_account Int
  account    Account  @relation(fields: [id_account], references: [id])
}

model Turn {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  capture   Boolean
  player    Player
  start_x   Int
  start_y   Int
  end_x     Int
  end_y     Int
  id_game   Int
  games     Game     @relation(fields: [id_game], references: [id])
}

model User {
  id         Int      @id @default(autoincrement())
  username   String   @unique
  email      String   @unique
  password   String
  id_account Int      @unique
  account    Account  @relation(fields: [id_account], references: [id])
  user       Friend[] @relation(name: "user")
  friend     Friend[] @relation(name: "friend")
}

model Friend {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  id_user   Int
  id_friend Int
  user      User     @relation(name: "user", fields: [id_user], references: [id])
  friend    User     @relation(name: "friend", fields: [id_friend], references: [id])

  @@unique([id_user, id_friend])
}

enum Role {
  USER
  GUEST
  ADMIN
}

enum Player {
  WHITE
  BLACK
}
